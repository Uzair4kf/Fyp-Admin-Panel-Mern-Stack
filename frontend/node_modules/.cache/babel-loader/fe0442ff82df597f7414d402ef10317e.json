{"ast":null,"code":"var is = require('type-is');\n\nvar Busboy = require('busboy');\n\nvar extend = require('xtend');\n\nvar appendField = require('append-field');\n\nvar Counter = require('./counter');\n\nvar MulterError = require('./multer-error');\n\nvar FileAppender = require('./file-appender');\n\nvar removeUploadedFiles = require('./remove-uploaded-files');\n\nfunction makeMiddleware(setup) {\n  return function multerMiddleware(req, res, next) {\n    if (!is(req, ['multipart'])) return next();\n    var options = setup();\n    var limits = options.limits;\n    var storage = options.storage;\n    var fileFilter = options.fileFilter;\n    var fileStrategy = options.fileStrategy;\n    var preservePath = options.preservePath;\n    req.body = Object.create(null);\n    var busboy;\n\n    try {\n      busboy = Busboy({\n        headers: req.headers,\n        limits: limits,\n        preservePath: preservePath\n      });\n    } catch (err) {\n      return next(err);\n    }\n\n    var appender = new FileAppender(fileStrategy, req);\n    var isDone = false;\n    var readFinished = false;\n    var errorOccured = false;\n    var pendingWrites = new Counter();\n    var uploadedFiles = [];\n\n    function done(err) {\n      if (isDone) return;\n      isDone = true;\n      req.unpipe(busboy);\n      busboy.removeAllListeners();\n      next(err);\n    }\n\n    function indicateDone() {\n      if (readFinished && pendingWrites.isZero() && !errorOccured) done();\n    }\n\n    function abortWithError(uploadError) {\n      if (errorOccured) return;\n      errorOccured = true;\n      pendingWrites.onceZero(function () {\n        function remove(file, cb) {\n          storage._removeFile(req, file, cb);\n        }\n\n        removeUploadedFiles(uploadedFiles, remove, function (err, storageErrors) {\n          if (err) return done(err);\n          uploadError.storageErrors = storageErrors;\n          done(uploadError);\n        });\n      });\n    }\n\n    function abortWithCode(code, optionalField) {\n      abortWithError(new MulterError(code, optionalField));\n    } // handle text field data\n\n\n    busboy.on('field', function (fieldname, value, {\n      nameTruncated,\n      valueTruncated\n    }) {\n      if (fieldname == null) return abortWithCode('MISSING_FIELD_NAME');\n      if (nameTruncated) return abortWithCode('LIMIT_FIELD_KEY');\n      if (valueTruncated) return abortWithCode('LIMIT_FIELD_VALUE', fieldname); // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n\n      if (limits && Object.prototype.hasOwnProperty.call(limits, 'fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY');\n      }\n\n      appendField(req.body, fieldname, value);\n    }); // handle files\n\n    busboy.on('file', function (fieldname, fileStream, {\n      filename,\n      encoding,\n      mimeType\n    }) {\n      // don't attach to the files object, if there is no file\n      if (!filename) return fileStream.resume(); // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n\n      if (limits && Object.prototype.hasOwnProperty.call(limits, 'fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY');\n      }\n\n      var file = {\n        fieldname: fieldname,\n        originalname: filename,\n        encoding: encoding,\n        mimetype: mimeType\n      };\n      var placeholder = appender.insertPlaceholder(file);\n      fileFilter(req, file, function (err, includeFile) {\n        if (err) {\n          appender.removePlaceholder(placeholder);\n          return abortWithError(err);\n        }\n\n        if (!includeFile) {\n          appender.removePlaceholder(placeholder);\n          return fileStream.resume();\n        }\n\n        var aborting = false;\n        pendingWrites.increment();\n        Object.defineProperty(file, 'stream', {\n          configurable: true,\n          enumerable: false,\n          value: fileStream\n        });\n        fileStream.on('error', function (err) {\n          pendingWrites.decrement();\n          abortWithError(err);\n        });\n        fileStream.on('limit', function () {\n          aborting = true;\n          abortWithCode('LIMIT_FILE_SIZE', fieldname);\n        });\n\n        storage._handleFile(req, file, function (err, info) {\n          if (aborting) {\n            appender.removePlaceholder(placeholder);\n            uploadedFiles.push(extend(file, info));\n            return pendingWrites.decrement();\n          }\n\n          if (err) {\n            appender.removePlaceholder(placeholder);\n            pendingWrites.decrement();\n            return abortWithError(err);\n          }\n\n          var fileInfo = extend(file, info);\n          appender.replacePlaceholder(placeholder, fileInfo);\n          uploadedFiles.push(fileInfo);\n          pendingWrites.decrement();\n          indicateDone();\n        });\n      });\n    });\n    busboy.on('error', function (err) {\n      abortWithError(err);\n    });\n    busboy.on('partsLimit', function () {\n      abortWithCode('LIMIT_PART_COUNT');\n    });\n    busboy.on('filesLimit', function () {\n      abortWithCode('LIMIT_FILE_COUNT');\n    });\n    busboy.on('fieldsLimit', function () {\n      abortWithCode('LIMIT_FIELD_COUNT');\n    });\n    busboy.on('close', function () {\n      readFinished = true;\n      indicateDone();\n    });\n    req.pipe(busboy);\n  };\n}\n\nmodule.exports = makeMiddleware;","map":{"version":3,"sources":["/Users/limia/Desktop/Dummy Admin Temp/package/node_modules/multer/lib/make-middleware.js"],"names":["is","require","Busboy","extend","appendField","Counter","MulterError","FileAppender","removeUploadedFiles","makeMiddleware","setup","multerMiddleware","req","res","next","options","limits","storage","fileFilter","fileStrategy","preservePath","body","Object","create","busboy","headers","err","appender","isDone","readFinished","errorOccured","pendingWrites","uploadedFiles","done","unpipe","removeAllListeners","indicateDone","isZero","abortWithError","uploadError","onceZero","remove","file","cb","_removeFile","storageErrors","abortWithCode","code","optionalField","on","fieldname","value","nameTruncated","valueTruncated","prototype","hasOwnProperty","call","length","fieldNameSize","fileStream","filename","encoding","mimeType","resume","originalname","mimetype","placeholder","insertPlaceholder","includeFile","removePlaceholder","aborting","increment","defineProperty","configurable","enumerable","decrement","_handleFile","info","push","fileInfo","replacePlaceholder","pipe","module","exports"],"mappings":"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","sourcesContent":["var is = require('type-is')\nvar Busboy = require('busboy')\nvar extend = require('xtend')\nvar appendField = require('append-field')\n\nvar Counter = require('./counter')\nvar MulterError = require('./multer-error')\nvar FileAppender = require('./file-appender')\nvar removeUploadedFiles = require('./remove-uploaded-files')\n\nfunction makeMiddleware (setup) {\n  return function multerMiddleware (req, res, next) {\n    if (!is(req, ['multipart'])) return next()\n\n    var options = setup()\n\n    var limits = options.limits\n    var storage = options.storage\n    var fileFilter = options.fileFilter\n    var fileStrategy = options.fileStrategy\n    var preservePath = options.preservePath\n\n    req.body = Object.create(null)\n\n    var busboy\n\n    try {\n      busboy = Busboy({ headers: req.headers, limits: limits, preservePath: preservePath })\n    } catch (err) {\n      return next(err)\n    }\n\n    var appender = new FileAppender(fileStrategy, req)\n    var isDone = false\n    var readFinished = false\n    var errorOccured = false\n    var pendingWrites = new Counter()\n    var uploadedFiles = []\n\n    function done (err) {\n      if (isDone) return\n      isDone = true\n      req.unpipe(busboy)\n      busboy.removeAllListeners()\n      next(err)\n    }\n\n    function indicateDone () {\n      if (readFinished && pendingWrites.isZero() && !errorOccured) done()\n    }\n\n    function abortWithError (uploadError) {\n      if (errorOccured) return\n      errorOccured = true\n\n      pendingWrites.onceZero(function () {\n        function remove (file, cb) {\n          storage._removeFile(req, file, cb)\n        }\n\n        removeUploadedFiles(uploadedFiles, remove, function (err, storageErrors) {\n          if (err) return done(err)\n\n          uploadError.storageErrors = storageErrors\n          done(uploadError)\n        })\n      })\n    }\n\n    function abortWithCode (code, optionalField) {\n      abortWithError(new MulterError(code, optionalField))\n    }\n\n    // handle text field data\n    busboy.on('field', function (fieldname, value, { nameTruncated, valueTruncated }) {\n      if (fieldname == null) return abortWithCode('MISSING_FIELD_NAME')\n      if (nameTruncated) return abortWithCode('LIMIT_FIELD_KEY')\n      if (valueTruncated) return abortWithCode('LIMIT_FIELD_VALUE', fieldname)\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits && Object.prototype.hasOwnProperty.call(limits, 'fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY')\n      }\n\n      appendField(req.body, fieldname, value)\n    })\n\n    // handle files\n    busboy.on('file', function (fieldname, fileStream, { filename, encoding, mimeType }) {\n      // don't attach to the files object, if there is no file\n      if (!filename) return fileStream.resume()\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits && Object.prototype.hasOwnProperty.call(limits, 'fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY')\n      }\n\n      var file = {\n        fieldname: fieldname,\n        originalname: filename,\n        encoding: encoding,\n        mimetype: mimeType\n      }\n\n      var placeholder = appender.insertPlaceholder(file)\n\n      fileFilter(req, file, function (err, includeFile) {\n        if (err) {\n          appender.removePlaceholder(placeholder)\n          return abortWithError(err)\n        }\n\n        if (!includeFile) {\n          appender.removePlaceholder(placeholder)\n          return fileStream.resume()\n        }\n\n        var aborting = false\n        pendingWrites.increment()\n\n        Object.defineProperty(file, 'stream', {\n          configurable: true,\n          enumerable: false,\n          value: fileStream\n        })\n\n        fileStream.on('error', function (err) {\n          pendingWrites.decrement()\n          abortWithError(err)\n        })\n\n        fileStream.on('limit', function () {\n          aborting = true\n          abortWithCode('LIMIT_FILE_SIZE', fieldname)\n        })\n\n        storage._handleFile(req, file, function (err, info) {\n          if (aborting) {\n            appender.removePlaceholder(placeholder)\n            uploadedFiles.push(extend(file, info))\n            return pendingWrites.decrement()\n          }\n\n          if (err) {\n            appender.removePlaceholder(placeholder)\n            pendingWrites.decrement()\n            return abortWithError(err)\n          }\n\n          var fileInfo = extend(file, info)\n\n          appender.replacePlaceholder(placeholder, fileInfo)\n          uploadedFiles.push(fileInfo)\n          pendingWrites.decrement()\n          indicateDone()\n        })\n      })\n    })\n\n    busboy.on('error', function (err) { abortWithError(err) })\n    busboy.on('partsLimit', function () { abortWithCode('LIMIT_PART_COUNT') })\n    busboy.on('filesLimit', function () { abortWithCode('LIMIT_FILE_COUNT') })\n    busboy.on('fieldsLimit', function () { abortWithCode('LIMIT_FIELD_COUNT') })\n    busboy.on('close', function () {\n      readFinished = true\n      indicateDone()\n    })\n\n    req.pipe(busboy)\n  }\n}\n\nmodule.exports = makeMiddleware\n"]},"metadata":{},"sourceType":"script"}