{"ast":null,"code":"var sys = require(\"util\"),\n    assert = require(\"assert\"),\n    http = require(\"http\"),\n    XMLHttpRequest = require(\"../lib/XMLHttpRequest\").XMLHttpRequest,\n    xhr; // Test server\n\n\nvar server = http.createServer(function (req, res) {\n  var body = req.method != \"HEAD\" ? \"Hello World\" : \"\";\n  res.writeHead(200, {\n    \"Content-Type\": \"text/plain\",\n    \"Content-Length\": Buffer.byteLength(body)\n  }); // HEAD has no body\n\n  if (req.method != \"HEAD\") {\n    res.write(body);\n  }\n\n  res.end();\n  assert.equal(onreadystatechange, true);\n  assert.equal(readystatechange, true);\n  assert.equal(removed, true);\n  console.log(\"done\");\n  this.close();\n}).listen(8000);\nxhr = new XMLHttpRequest(); // Track event calls\n\nvar onreadystatechange = false;\nvar readystatechange = false;\nvar removed = true;\n\nvar removedEvent = function () {\n  removed = false;\n};\n\nxhr.onreadystatechange = function () {\n  onreadystatechange = true;\n};\n\nxhr.addEventListener(\"readystatechange\", function () {\n  readystatechange = true;\n}); // This isn't perfect, won't guarantee it was added in the first place\n\nxhr.addEventListener(\"readystatechange\", removedEvent);\nxhr.removeEventListener(\"readystatechange\", removedEvent);\nxhr.open(\"GET\", \"http://localhost:8000\");\nxhr.send();","map":{"version":3,"sources":["/Users/limia/Desktop/Dummy Admin Temp/package/frontend/node_modules/xmlhttprequest-ssl/tests/test-events.js"],"names":["sys","require","assert","http","XMLHttpRequest","xhr","server","createServer","req","res","body","method","writeHead","Buffer","byteLength","write","end","equal","onreadystatechange","readystatechange","removed","console","log","close","listen","removedEvent","addEventListener","removeEventListener","open","send"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAjB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CADpB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAFlB;AAAA,IAGIG,cAAc,GAAGH,OAAO,CAAC,uBAAD,CAAP,CAAiCG,cAHtD;AAAA,IAIIC,GAJJ,C,CAMA;;;AACA,IAAIC,MAAM,GAAGH,IAAI,CAACI,YAAL,CAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACjD,MAAIC,IAAI,GAAIF,GAAG,CAACG,MAAJ,IAAc,MAAd,GAAuB,aAAvB,GAAuC,EAAnD;AAEAF,EAAAA,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;AACjB,oBAAgB,YADC;AAEjB,sBAAkBC,MAAM,CAACC,UAAP,CAAkBJ,IAAlB;AAFD,GAAnB,EAHiD,CAOjD;;AACA,MAAIF,GAAG,CAACG,MAAJ,IAAc,MAAlB,EAA0B;AACxBF,IAAAA,GAAG,CAACM,KAAJ,CAAUL,IAAV;AACD;;AACDD,EAAAA,GAAG,CAACO,GAAJ;AACAd,EAAAA,MAAM,CAACe,KAAP,CAAaC,kBAAb,EAAiC,IAAjC;AACAhB,EAAAA,MAAM,CAACe,KAAP,CAAaE,gBAAb,EAA+B,IAA/B;AACAjB,EAAAA,MAAM,CAACe,KAAP,CAAaG,OAAb,EAAsB,IAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,OAAKC,KAAL;AACD,CAjBY,EAiBVC,MAjBU,CAiBH,IAjBG,CAAb;AAmBAnB,GAAG,GAAG,IAAID,cAAJ,EAAN,C,CAEA;;AACA,IAAIc,kBAAkB,GAAG,KAAzB;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,IAAIC,OAAO,GAAG,IAAd;;AACA,IAAIK,YAAY,GAAG,YAAW;AAC5BL,EAAAA,OAAO,GAAG,KAAV;AACD,CAFD;;AAIAf,GAAG,CAACa,kBAAJ,GAAyB,YAAW;AAClCA,EAAAA,kBAAkB,GAAG,IAArB;AACD,CAFD;;AAIAb,GAAG,CAACqB,gBAAJ,CAAqB,kBAArB,EAAyC,YAAW;AAClDP,EAAAA,gBAAgB,GAAG,IAAnB;AACD,CAFD,E,CAIA;;AACAd,GAAG,CAACqB,gBAAJ,CAAqB,kBAArB,EAAyCD,YAAzC;AACApB,GAAG,CAACsB,mBAAJ,CAAwB,kBAAxB,EAA4CF,YAA5C;AAEApB,GAAG,CAACuB,IAAJ,CAAS,KAAT,EAAgB,uBAAhB;AACAvB,GAAG,CAACwB,IAAJ","sourcesContent":["var sys = require(\"util\")\n  , assert = require(\"assert\")\n  , http = require(\"http\")\n  , XMLHttpRequest = require(\"../lib/XMLHttpRequest\").XMLHttpRequest\n  , xhr;\n\n// Test server\nvar server = http.createServer(function (req, res) {\n  var body = (req.method != \"HEAD\" ? \"Hello World\" : \"\");\n\n  res.writeHead(200, {\n    \"Content-Type\": \"text/plain\",\n    \"Content-Length\": Buffer.byteLength(body)\n  });\n  // HEAD has no body\n  if (req.method != \"HEAD\") {\n    res.write(body);\n  }\n  res.end();\n  assert.equal(onreadystatechange, true);\n  assert.equal(readystatechange, true);\n  assert.equal(removed, true);\n  console.log(\"done\");\n  this.close();\n}).listen(8000);\n\nxhr = new XMLHttpRequest();\n\n// Track event calls\nvar onreadystatechange = false;\nvar readystatechange = false;\nvar removed = true;\nvar removedEvent = function() {\n  removed = false;\n};\n\nxhr.onreadystatechange = function() {\n  onreadystatechange = true;\n};\n\nxhr.addEventListener(\"readystatechange\", function() {\n  readystatechange = true;\n});\n\n// This isn't perfect, won't guarantee it was added in the first place\nxhr.addEventListener(\"readystatechange\", removedEvent);\nxhr.removeEventListener(\"readystatechange\", removedEvent);\n\nxhr.open(\"GET\", \"http://localhost:8000\");\nxhr.send();\n"]},"metadata":{},"sourceType":"script"}