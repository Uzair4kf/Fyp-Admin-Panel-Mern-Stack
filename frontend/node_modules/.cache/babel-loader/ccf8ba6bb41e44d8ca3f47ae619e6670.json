{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Row, Card, Col, Button, Nav, Image, Spinner } from \"react-bootstrap\";\nimport UploadImageContext from \"../../context/UploadImageContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateCategory() {\n  _s();\n\n  const [image, setImage] = useState();\n  const [categories, setCategories] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [cloudImage, setCloudImage] = useState();\n  const [isCreate, setIsCreate] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  let id = window.location.href.slice(48);\n  let state = window.location.href.slice(48);\n  console.log(\"state :\", state);\n  const navigate = useHistory();\n  const [description, setDescription] = useState(\"\");\n\n  const createCategory = async () => {\n    await axios.post(`/ecom-categories`, {\n      name: name,\n      description: description,\n      image: cloudImage === null || cloudImage === void 0 ? void 0 : cloudImage.public_id\n    });\n    let path = `/ecom-categories`;\n    navigate.push(path);\n  };\n\n  const updateCategory = id => {\n    axios.put(`/ecom-categories/${id}`, {\n      name: name,\n      description: description,\n      image: cloudImage === null || cloudImage === void 0 ? void 0 : cloudImage.public_id\n    });\n    let path = `/ecom-categories`;\n    navigate.push(path);\n  };\n\n  useEffect(() => {\n    const fetchcategories = async () => {\n      const {\n        data\n      } = await axios.get(\"/ecom-categories\");\n      setCategories(data);\n    };\n\n    fetchcategories();\n\n    if (state == \"create\") {\n      setIsCreate(true);\n    }\n  }, []);\n  let a = categories === null || categories === void 0 ? void 0 : categories.find(y => {\n    return y._id === id;\n  });\n\n  const uploadFileHandler = async e => {\n    setIsLoading(true);\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\n    console.log(formData.get(\"file\"));\n    const {\n      data\n    } = await axios.post(\"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\", formData);\n    setCloudImage(data);\n\n    if (data) {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(CreateCategory, \"QLsF+uiV84KpbsyDYkqNTnD2Kks=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"sources":["C:/Users/limia/Desktop/Dummy Admin Temp/package/frontend/src/jsx/pages/CreateCategory.js"],"names":["React","useState","useEffect","useContext","axios","Link","useHistory","Row","Card","Col","Button","Nav","Image","Spinner","UploadImageContext","CreateCategory","image","setImage","categories","setCategories","name","setName","cloudImage","setCloudImage","isCreate","setIsCreate","isLoading","setIsLoading","id","window","location","href","slice","state","console","log","navigate","description","setDescription","createCategory","post","public_id","path","push","updateCategory","put","fetchcategories","data","get","a","find","y","_id","uploadFileHandler","e","file","target","files","formData","FormData","append"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Row, Card, Col, Button, Nav, Image, Spinner } from \"react-bootstrap\";\r\nimport UploadImageContext from \"../../context/UploadImageContext\";\r\nexport default function CreateCategory() {\r\n  const [image, setImage] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [cloudImage, setCloudImage] = useState();\r\n  const [isCreate, setIsCreate] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let id = window.location.href.slice(48);\r\n  let state = window.location.href.slice(48);\r\n  console.log(\"state :\", state);\r\n\r\n  const navigate = useHistory();\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const createCategory = async () => {\r\n    await axios.post(`/ecom-categories`, {\r\n      name: name,\r\n\r\n      description: description,\r\n      image: cloudImage?.public_id,\r\n    });\r\n    let path = `/ecom-categories`;\r\n    navigate.push(path);\r\n  };\r\n\r\n  const updateCategory = (id) => {\r\n    axios.put(`/ecom-categories/${id}`, {\r\n      name: name,\r\n\r\n      description: description,\r\n      image: cloudImage?.public_id,\r\n    });\r\n    let path = `/ecom-categories`;\r\n    navigate.push(path);\r\n  };\r\n  useEffect(() => {\r\n    const fetchcategories = async () => {\r\n      const { data } = await axios.get(\"/ecom-categories\");\r\n\r\n      setCategories(data);\r\n    };\r\n    fetchcategories();\r\n    if (state == \"create\") {\r\n      setIsCreate(true);\r\n    }\r\n  }, []);\r\n  let a = categories?.find((y) => {\r\n    return y._id === id;\r\n  });\r\n  const uploadFileHandler = async (e) => {\r\n    setIsLoading(true);\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\r\n    console.log(formData.get(\"file\"));\r\n\r\n    const { data } = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\",\r\n      formData\r\n    );\r\n\r\n    setCloudImage(data);\r\n    if (data) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Row>\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"file\"\r\n                    placeholder=\"image\"\r\n                    onChange={(e) => {\r\n                      setImage(e.target.files[0]);\r\n                      uploadFileHandler(e);\r\n                    }}\r\n                  />\r\n                  {isLoading && (\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        {isCreate ? (\r\n          <Button\r\n            className=\"me-2\"\r\n            variant=\"primary btn-lg\"\r\n            onClick={() => {\r\n              createCategory();\r\n            }}\r\n          >\r\n            Create Category\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className=\"me-2\"\r\n            variant=\"primary btn-lg\"\r\n            onClick={() => {\r\n              updateCategory(a?._id);\r\n            }}\r\n          >\r\n            Update Category\r\n          </Button>\r\n        )}\r\n      </Row> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}