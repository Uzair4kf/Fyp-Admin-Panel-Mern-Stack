{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limia\\\\Desktop\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\jsx\\\\pages\\\\SliderLIst.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Sliders from \"./Sliders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SliderLIst() {\n  _s();\n\n  const history = useHistory();\n  const [sliders, setSliders] = useState([]);\n  useEffect(() => {\n    const fetchsliders = async () => {\n      const {\n        data\n      } = await axios.get(\"/Slider\");\n      setSliders(data);\n    };\n\n    fetchsliders();\n  }, []);\n\n  const createSlider = async () => {\n    let path = `/CreateSlider`;\n    history.push(path);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        createSlider();\n      },\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: sliders.map((slider, i) => {\n        return /*#__PURE__*/_jsxDEV(Sliders, {\n          slider: slider\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SliderLIst, \"XoqFxSrrTxFWc3VGXzGR4Spl2WU=\", true);\n\n_c = SliderLIst;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderLIst\");","map":{"version":3,"sources":["C:/Users/limia/Desktop/Dummy Admin Temp/package/frontend/src/jsx/pages/SliderLIst.js"],"names":["React","useState","useEffect","Row","Button","axios","Sliders","SliderLIst","history","useHistory","sliders","setSliders","fetchsliders","data","get","createSlider","path","push","map","slider","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAC/B,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAG,YAAY;AAC/B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,SAAV,CAAvB;AAEAH,MAAAA,UAAU,CAACE,IAAD,CAAV;AACD,KAJD;;AAKAD,IAAAA,YAAY;AACb,GAPQ,EAON,EAPM,CAAT;;AAUE,QAAMG,YAAY,GAAG,YAAY;AAE/B,QAAIC,IAAI,GAAI,eAAZ;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAaD,IAAb;AACD,GAJD;;AAMF,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbD,QAAAA,YAAY;AACb,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AAAA,gBACGL,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AAC1B,4BAAO,QAAC,OAAD;AAAS,UAAA,MAAM,EAAED;AAAjB,WAA8BC,CAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAgBD;;GAnCuBb,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Sliders from \"./Sliders\";\r\nexport default function SliderLIst() {\r\n      const history = useHistory();\r\n  const [sliders, setSliders] = useState([]);\r\n  useEffect(() => {\r\n    const fetchsliders = async () => {\r\n      const { data } = await axios.get(\"/Slider\");\r\n\r\n      setSliders(data);\r\n    };\r\n    fetchsliders();\r\n  }, []);\r\n\r\n \r\n    const createSlider = async () => {\r\n \r\n      let path = `/CreateSlider`;\r\n      history.push(path);\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          createSlider();\r\n        }}\r\n      >\r\n        Create\r\n      </Button>\r\n      <Row>\r\n        {sliders.map((slider, i) => {\r\n          return <Sliders slider={slider} key={i} />;\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}