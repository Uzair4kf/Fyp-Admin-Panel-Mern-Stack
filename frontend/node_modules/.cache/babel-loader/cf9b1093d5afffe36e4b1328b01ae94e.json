{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limia\\\\Desktop\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\jsx\\\\pages\\\\CreateCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Row, Card, Col, Button, Nav, Spinner } from \"react-bootstrap\";\nimport { Image, Transformation } from \"cloudinary-react\";\nimport UploadImageContext from \"../../context/UploadImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateCategory() {\n  _s();\n\n  const [image, setImage] = useState();\n  const [categories, setCategories] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [cloudImage, setCloudImage] = useState();\n  const [isCreate, setIsCreate] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  let id = window.location.href.slice(48);\n  let state = window.location.href.slice(48);\n  const navigate = useHistory();\n  const [description, setDescription] = useState(\"\");\n\n  const createCategory = async () => {\n    await axios.post(`/ecom-categories`, {\n      name: name,\n      description: description,\n      image: cloudImage === null || cloudImage === void 0 ? void 0 : cloudImage.public_id\n    });\n    let path = `/ecom-categories`;\n    navigate.push(path);\n  };\n\n  const updateCategory = id => {\n    axios.put(`/ecom-categories/${id}`, {\n      name: name,\n      description: description,\n      image: cloudImage === null || cloudImage === void 0 ? void 0 : cloudImage.public_id\n    });\n    let path = `/ecom-categories`;\n    navigate.push(path);\n  };\n\n  useEffect(() => {\n    const fetchcategories = async () => {\n      const {\n        data\n      } = await axios.get(\"/ecom-categories\");\n      setCategories(data);\n    };\n\n    fetchcategories();\n\n    if (state == \"create\") {\n      setIsCreate(true);\n    }\n  }, []);\n  let a = categories === null || categories === void 0 ? void 0 : categories.find(y => {\n    return y._id === id;\n  });\n\n  const uploadFileHandler = async e => {\n    setIsLoading(true);\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\n    console.log(formData.get(\"file\"));\n    const {\n      data\n    } = await axios.post(\"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\", formData);\n    setCloudImage(data);\n\n    if (data) {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"needs-validation\",\n      noValidate: \"\",\n      onSubmit: () => {\n        if (isCreate) {\n          createCategory();\n        } else {\n          updateCategory(a === null || a === void 0 ? void 0 : a._id);\n        }\n\n        let path = \"/ecom-categories\";\n        navigate.push(path);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"productname\",\n            children: \"Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"productname\",\n            defaultValue: a === null || a === void 0 ? void 0 : a.name,\n            required: true,\n            onChange: e => {\n              console.log(e.target.value);\n\n              if (!e.target.value == \"\") {\n                setName(e.target.value);\n              } else {\n                setName(a === null || a === void 0 ? void 0 : a.name);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"Valid first name is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product description\",\n            children: \"Category description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"product description\",\n            defaultValue: a === null || a === void 0 ? void 0 : a.description,\n            required: true,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: \"Valid last name is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product description\",\n            children: \"Category Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-control form-control-lg\",\n            type: \"file\",\n            placeholder: \"image\",\n            name: \"image\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              uploadFileHandler(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            cloudName: \"djpdvrlkk\",\n            publicId: a === null || a === void 0 ? void 0 : a.image,\n            children: /*#__PURE__*/_jsxDEV(Transformation, {\n              crop: \"scale\",\n              width: \"200\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), isCreate ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg btn-block\",\n        type: \"submit\",\n        children: \"Create Subcategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg btn-block\",\n        type: \"submit\",\n        children: \"Update Subcategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateCategory, \"QLsF+uiV84KpbsyDYkqNTnD2Kks=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"sources":["C:/Users/limia/Desktop/Dummy Admin Temp/package/frontend/src/jsx/pages/CreateCategory.js"],"names":["React","useState","useEffect","useContext","axios","Link","useHistory","Row","Card","Col","Button","Nav","Spinner","Image","Transformation","UploadImageContext","CreateCategory","image","setImage","categories","setCategories","name","setName","cloudImage","setCloudImage","isCreate","setIsCreate","isLoading","setIsLoading","id","window","location","href","slice","state","navigate","description","setDescription","createCategory","post","public_id","path","push","updateCategory","put","fetchcategories","data","get","a","find","y","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","console","log","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Row, Card, Col, Button, Nav, Spinner } from \"react-bootstrap\";\r\nimport { Image, Transformation } from \"cloudinary-react\";\r\nimport UploadImageContext from \"../../context/UploadImageContext\";\r\nexport default function CreateCategory() {\r\n  const [image, setImage] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [cloudImage, setCloudImage] = useState();\r\n  const [isCreate, setIsCreate] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let id = window.location.href.slice(48);\r\n  let state = window.location.href.slice(48);\r\n\r\n  const navigate = useHistory();\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const createCategory = async () => {\r\n    await axios.post(`/ecom-categories`, {\r\n      name: name,\r\n      description: description,\r\n      image: cloudImage?.public_id,\r\n    });\r\n    let path = `/ecom-categories`;\r\n    navigate.push(path);\r\n  };\r\n\r\n  const updateCategory = (id) => {\r\n    axios.put(`/ecom-categories/${id}`, {\r\n      name: name,\r\n\r\n      description: description,\r\n      image: cloudImage?.public_id,\r\n    });\r\n    let path = `/ecom-categories`;\r\n    navigate.push(path);\r\n  };\r\n  useEffect(() => {\r\n    const fetchcategories = async () => {\r\n      const { data } = await axios.get(\"/ecom-categories\");\r\n\r\n      setCategories(data);\r\n    };\r\n    fetchcategories();\r\n    if (state == \"create\") {\r\n      setIsCreate(true);\r\n    }\r\n  }, []);\r\n  let a = categories?.find((y) => {\r\n    return y._id === id;\r\n  });\r\n  const uploadFileHandler = async (e) => {\r\n    setIsLoading(true);\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\r\n    console.log(formData.get(\"file\"));\r\n\r\n    const { data } = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\",\r\n      formData\r\n    );\r\n\r\n    setCloudImage(data);\r\n    if (data) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Row>\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xl=\"6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"basic-form\">\r\n              <form>\r\n                <div class=\"form-group mb-3\">\r\n                  <input\r\n                    class=\"form-control form-control-lg\"\r\n                    type=\"file\"\r\n                    placeholder=\"image\"\r\n                    onChange={(e) => {\r\n                      setImage(e.target.files[0]);\r\n                      uploadFileHandler(e);\r\n                    }}\r\n                  />\r\n                  {isLoading && (\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        {isCreate ? (\r\n          <Button\r\n            className=\"me-2\"\r\n            variant=\"primary btn-lg\"\r\n            onClick={() => {\r\n              createCategory();\r\n            }}\r\n          >\r\n            Create Category\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className=\"me-2\"\r\n            variant=\"primary btn-lg\"\r\n            onClick={() => {\r\n              updateCategory(a?._id);\r\n            }}\r\n          >\r\n            Update Category\r\n          </Button>\r\n        )}\r\n      </Row> */}\r\n      <form\r\n        className=\"needs-validation\"\r\n        noValidate=\"\"\r\n        onSubmit={() => {\r\n          if (isCreate) {\r\n            createCategory();\r\n          } else {\r\n            updateCategory(a?._id);\r\n          }\r\n          let path = \"/ecom-categories\";\r\n          navigate.push(path);\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"productname\">Category Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              \r\n              id=\"productname\"\r\n              defaultValue={a?.name}\r\n              required\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                if (!e.target.value == \"\") {\r\n                  setName(e.target.value);\r\n                } else {\r\n                  setName(a?.name);\r\n                }\r\n              }}\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              Valid first name is required.\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"product description\">Category description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"product description\"\r\n              defaultValue={a?.description}\r\n              required\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <div className=\"invalid-feedback\">Valid last name is required.</div>\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"product description\">Category Image</label>\r\n            <input\r\n              class=\"form-control form-control-lg\"\r\n              type=\"file\"\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0]);\r\n                uploadFileHandler(e);\r\n              }}\r\n            />\r\n\r\n            {isLoading && <Spinner animation=\"border\" variant=\"primary\" />}\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <Image cloudName=\"djpdvrlkk\" publicId={a?.image}>\r\n              <Transformation crop=\"scale\" width=\"200\" height=\"200\" />\r\n            </Image>\r\n          </div>\r\n        </div>\r\n\r\n        {isCreate ? (\r\n          <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\r\n            Create Subcategory\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\r\n            Update Subcategory\r\n          </button>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}