{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _helperDefinePolyfillProvider = _interopRequireDefault(require(\"@babel/helper-define-polyfill-provider\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst runtimeCompat = \"#__secret_key__@babel/runtime__compatibility\";\n\nvar _default = (0, _helperDefinePolyfillProvider.default)(({\n  debug\n}, options) => {\n  const {\n    [runtimeCompat]: {\n      useBabelRuntime\n    } = {}\n  } = options;\n  const pureName = useBabelRuntime ? `${useBabelRuntime}/regenerator` : \"regenerator-runtime\";\n  return {\n    name: \"regenerator\",\n    polyfills: [\"regenerator-runtime\"],\n\n    usageGlobal(meta, utils) {\n      if (isRegenerator(meta)) {\n        debug(\"regenerator-runtime\");\n        utils.injectGlobalImport(\"regenerator-runtime/runtime.js\");\n      }\n    },\n\n    usagePure(meta, utils, path) {\n      if (isRegenerator(meta)) {\n        path.replaceWith(utils.injectDefaultImport(pureName, \"regenerator-runtime\"));\n      }\n    }\n\n  };\n});\n\nexports.default = _default;\n\nconst isRegenerator = meta => meta.kind === \"global\" && meta.name === \"regeneratorRuntime\";","map":{"version":3,"sources":["/Users/limia/Desktop/Dummy Admin Temp/package/frontend/node_modules/babel-plugin-polyfill-regenerator/lib/index.js"],"names":["exports","__esModule","default","_helperDefinePolyfillProvider","_interopRequireDefault","require","obj","runtimeCompat","_default","debug","options","useBabelRuntime","pureName","name","polyfills","usageGlobal","meta","utils","isRegenerator","injectGlobalImport","usagePure","path","replaceWith","injectDefaultImport","kind"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,6BAA6B,GAAGC,sBAAsB,CAACC,OAAO,CAAC,wCAAD,CAAR,CAA1D;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAMC,aAAa,GAAG,8CAAtB;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGL,6BAA6B,CAACD,OAAlC,EAA2C,CAAC;AACzDO,EAAAA;AADyD,CAAD,EAEvDC,OAFuD,KAE3C;AACb,QAAM;AACJ,KAACH,aAAD,GAAiB;AACfI,MAAAA;AADe,QAEb;AAHA,MAIFD,OAJJ;AAKA,QAAME,QAAQ,GAAGD,eAAe,GAAI,GAAEA,eAAgB,cAAtB,GAAsC,qBAAtE;AACA,SAAO;AACLE,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,SAAS,EAAE,CAAC,qBAAD,CAFN;;AAILC,IAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,UAAIC,aAAa,CAACF,IAAD,CAAjB,EAAyB;AACvBP,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACAQ,QAAAA,KAAK,CAACE,kBAAN,CAAyB,gCAAzB;AACD;AACF,KATI;;AAWLC,IAAAA,SAAS,CAACJ,IAAD,EAAOC,KAAP,EAAcI,IAAd,EAAoB;AAC3B,UAAIH,aAAa,CAACF,IAAD,CAAjB,EAAyB;AACvBK,QAAAA,IAAI,CAACC,WAAL,CAAiBL,KAAK,CAACM,mBAAN,CAA0BX,QAA1B,EAAoC,qBAApC,CAAjB;AACD;AACF;;AAfI,GAAP;AAkBD,CA3Bc,CAAf;;AA6BAZ,OAAO,CAACE,OAAR,GAAkBM,QAAlB;;AAEA,MAAMU,aAAa,GAAGF,IAAI,IAAIA,IAAI,CAACQ,IAAL,KAAc,QAAd,IAA0BR,IAAI,CAACH,IAAL,KAAc,oBAAtE","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _helperDefinePolyfillProvider = _interopRequireDefault(require(\"@babel/helper-define-polyfill-provider\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst runtimeCompat = \"#__secret_key__@babel/runtime__compatibility\";\n\nvar _default = (0, _helperDefinePolyfillProvider.default)(({\n  debug\n}, options) => {\n  const {\n    [runtimeCompat]: {\n      useBabelRuntime\n    } = {}\n  } = options;\n  const pureName = useBabelRuntime ? `${useBabelRuntime}/regenerator` : \"regenerator-runtime\";\n  return {\n    name: \"regenerator\",\n    polyfills: [\"regenerator-runtime\"],\n\n    usageGlobal(meta, utils) {\n      if (isRegenerator(meta)) {\n        debug(\"regenerator-runtime\");\n        utils.injectGlobalImport(\"regenerator-runtime/runtime.js\");\n      }\n    },\n\n    usagePure(meta, utils, path) {\n      if (isRegenerator(meta)) {\n        path.replaceWith(utils.injectDefaultImport(pureName, \"regenerator-runtime\"));\n      }\n    }\n\n  };\n});\n\nexports.default = _default;\n\nconst isRegenerator = meta => meta.kind === \"global\" && meta.name === \"regeneratorRuntime\";"]},"metadata":{},"sourceType":"script"}