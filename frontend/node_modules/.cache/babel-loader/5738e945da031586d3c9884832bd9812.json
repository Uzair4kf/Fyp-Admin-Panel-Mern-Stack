{"ast":null,"code":"import mongoose from \"mongoose\";\nimport dotenv from \"dotenv\";\nimport products from \"./data/products.js\";\nimport Product from \"./models/productModel.js\";\nimport connectDB from \"./config/db.js\";\ndotenv.config();\nconnectDB();\n\nconst importData = async () => {\n  try {\n    const sampleProducts = products.map(product => {\n      return { ...product\n      };\n    });\n    let a = await Product.insertMany(sampleProducts);\n    console.log(a);\n    console.log(\"Data Imported!\");\n    process.exit();\n  } catch (error) {\n    console.error(`${error}`);\n    process.exit(1);\n  }\n};\n\nconst destroyData = async () => {\n  try {\n    await Product.deleteMany();\n    console.log(\"Data Destroyed!\".red.inverse);\n    process.exit();\n  } catch (error) {\n    console.error(`${error}`.red.inverse);\n    process.exit(1);\n  }\n};\n\nif (process.argv[2] === \"-d\") {\n  destroyData();\n} else {\n  console.log(\"jf\");\n  importData();\n}","map":{"version":3,"sources":["/Users/limia/Desktop/Dummy Admin Temp/package/backend/seeder.js"],"names":["mongoose","dotenv","products","Product","connectDB","config","importData","sampleProducts","map","product","a","insertMany","console","log","process","exit","error","destroyData","deleteMany","red","inverse","argv"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACAH,MAAM,CAACI,MAAP;AACAD,SAAS;;AAET,MAAME,UAAU,GAAG,YAAY;AAC7B,MAAI;AACF,UAAMC,cAAc,GAAGL,QAAQ,CAACM,GAAT,CAAcC,OAAD,IAAa;AAC/C,aAAO,EAAE,GAAGA;AAAL,OAAP;AACD,KAFsB,CAAvB;AAIA,QAAIC,CAAC,GAAG,MAAMP,OAAO,CAACQ,UAAR,CAAmBJ,cAAnB,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,OAAO,CAACC,IAAR;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACI,KAAR,CAAe,GAAEA,KAAM,EAAvB;AACAF,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;AACF,CAdD;;AAgBA,MAAME,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMd,OAAO,CAACe,UAAR,EAAN;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBM,GAAlB,CAAsBC,OAAlC;AACAN,IAAAA,OAAO,CAACC,IAAR;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACI,KAAR,CAAe,GAAEA,KAAM,EAAT,CAAWG,GAAX,CAAeC,OAA7B;AACAN,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;AACF,CAVD;;AAYA,IAAID,OAAO,CAACO,IAAR,CAAa,CAAb,MAAoB,IAAxB,EAA8B;AAC5BJ,EAAAA,WAAW;AACZ,CAFD,MAEO;AACLL,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAP,EAAAA,UAAU;AACX","sourcesContent":["import mongoose from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\nimport products from \"./data/products.js\";\r\nimport Product from \"./models/productModel.js\";\r\nimport connectDB from \"./config/db.js\";\r\ndotenv.config();\r\nconnectDB();\r\n\r\nconst importData = async () => {\r\n  try {\r\n    const sampleProducts = products.map((product) => {\r\n      return { ...product };\r\n    });\r\n\r\n    let a = await Product.insertMany(sampleProducts);\r\n    console.log(a);\r\n    console.log(\"Data Imported!\");\r\n    process.exit();\r\n  } catch (error) {\r\n    console.error(`${error}`);\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\nconst destroyData = async () => {\r\n  try {\r\n    await Product.deleteMany();\r\n\r\n    console.log(\"Data Destroyed!\".red.inverse);\r\n    process.exit();\r\n  } catch (error) {\r\n    console.error(`${error}`.red.inverse);\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\nif (process.argv[2] === \"-d\") {\r\n  destroyData();\r\n} else {\r\n  console.log(\"jf\");\r\n  importData();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}