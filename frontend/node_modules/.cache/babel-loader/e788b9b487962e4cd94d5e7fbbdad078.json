{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limia\\\\Desktop\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\context\\\\UploadImageState.js\";\nimport UploadImageContext from \"./UploadImageContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadImageState = ({\n  children,\n  setCloudImage\n}) => {\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\n    console.log(formData.get(\"file\"));\n    const {\n      data\n    } = await axios.post(\"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\", formData);\n    setCloudImage(data);\n\n    if (data) {\n      setIsLoading(false);\n    }\n\n    console.log(\" it worked\");\n  };\n\n  console.log(\"uploadFileHandlerContext:\", uploadFileHandler);\n  return /*#__PURE__*/_jsxDEV(UploadImageContext.Provider, {\n    value: uploadFileHandler,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UploadImageState;\nexport default UploadImageState;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImageState\");","map":{"version":3,"sources":["C:/Users/limia/Desktop/Dummy Admin Temp/package/frontend/src/context/UploadImageState.js"],"names":["UploadImageContext","axios","UploadImageState","children","setCloudImage","uploadFileHandler","e","file","target","files","formData","FormData","append","console","log","get","data","post","setIsLoading"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAiC;AACxD,QAAMC,iBAAiB,GAAG,MAAOC,CAAP,IAAa;AAErC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,UAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,GAAT,CAAa,MAAb,CAAZ;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CACrB,wDADqB,EAErBP,QAFqB,CAAvB;AAKAN,IAAAA,aAAa,CAACY,IAAD,CAAb;;AACA,QAAIA,IAAJ,EAAU;AACRE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GArBD;;AAsBAD,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCT,iBAAzC;AACA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEA,iBAApC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;KAAMD,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import UploadImageContext from \"./UploadImageContext\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadImageState = ({ children, setCloudImage }) => {\r\n  const uploadFileHandler = async (e) => {\r\n    \r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"sw2ks6ox\");\r\n    console.log(formData.get(\"file\"));\r\n\r\n    const { data } = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/djpdvrlkk/image/upload\",\r\n      formData\r\n    );\r\n\r\n    setCloudImage(data);\r\n    if (data) {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    console.log(\" it worked\");\r\n  };\r\n  console.log(\"uploadFileHandlerContext:\", uploadFileHandler);\r\n  return (\r\n    <UploadImageContext.Provider value={uploadFileHandler}>\r\n      {children}\r\n    </UploadImageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UploadImageState;\r\n"]},"metadata":{},"sourceType":"module"}