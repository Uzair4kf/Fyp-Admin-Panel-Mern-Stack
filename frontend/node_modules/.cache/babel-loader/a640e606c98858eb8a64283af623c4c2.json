{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\E commerce Templates\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\jsx\\\\pages\\\\ProductList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Card, Col, Button, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport useAlan from \"../hooks/useAlan\";\nimport CreateProduct from \"./CreateProduct\";\nimport Product from \"./Product\";\nimport axios from \"axios\";\nimport Pagination from \"../components/bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  //Initialization\n  const [products, setProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postperPage, setPostPerPage] = useState(10);\n  const indexofLastPage = currentPage * postperPage;\n  const indexofFirstPage = indexofLastPage - postperPage;\n  const currentProducts = products.slice(indexofFirstPage, indexofLastPage);\n  const [alanInstance, setAlanInstance] = useState();\n  const alanKey = `1924fbdbfa5f99b552c43824c5134e1c2e956eca572e1d8b807a3e2338fdd0dc/stage`;\n  const [filterProducts, setFilterProducts] = useState();\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  }; //hooks\n\n\n  useEffect(() => {\n    const fetchproducts = async () => {\n      const {\n        data\n      } = await axios.get(\"/ecom-product-list\");\n      setProducts(data);\n    };\n\n    fetchproducts();\n  }, [currentProducts]);\n\n  const deleteP = id => [axios.delete(`/ecom-product-list/${id}`)];\n\n  const createProduct = () => axios.post(\"/ecom-product-list\");\n\n  let newProducts = products;\n  let p = \"12\";\n  let newProduct;\n  useAlan(products, setCurrentPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/CreateProduct\",\n        state: {\n          id: 1,\n          name: \"sabaoon\",\n          shirt: \"green\",\n          products: products\n        }\n      },\n      onClick: () => {\n        createProduct().then(res => {\n          newProduct = res.data;\n        });\n      },\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: currentProducts.map((product, i) => {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          deleteP: deleteP\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postperPage: postperPage,\n      totalPosts: products.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Web/E commerce Templates/Dummy Admin Temp/package/frontend/src/jsx/pages/ProductList.js"],"names":["React","useState","useEffect","Row","Card","Col","Button","Nav","Link","useAlan","CreateProduct","Product","axios","Pagination","products","setProducts","currentPage","setCurrentPage","postperPage","setPostPerPage","indexofLastPage","indexofFirstPage","currentProducts","slice","alanInstance","setAlanInstance","alanKey","filterProducts","setFilterProducts","paginate","pageNumber","fetchproducts","data","get","deleteP","id","delete","createProduct","post","newProducts","p","newProduct","pathname","state","name","shirt","then","res","map","product","i","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAlan from \"../hooks/useAlan\";\r\nimport CreateProduct from \"./CreateProduct\";\r\nimport Product from \"./Product\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"../components/bootstrap/Pagination\";\r\nexport default function () {\r\n\r\n//Initialization\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postperPage, setPostPerPage] = useState(10);\r\n  const indexofLastPage = currentPage * postperPage;\r\n  const indexofFirstPage = indexofLastPage - postperPage;\r\n  const currentProducts = products.slice(indexofFirstPage, indexofLastPage);\r\n\r\n\r\n  const [alanInstance, setAlanInstance] = useState();\r\n  const alanKey = `1924fbdbfa5f99b552c43824c5134e1c2e956eca572e1d8b807a3e2338fdd0dc/stage`;\r\n  \r\n  const [filterProducts, setFilterProducts] = useState();\r\n\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n\r\n\r\n  //hooks\r\n  useEffect(() => {\r\n    const fetchproducts = async () => {\r\n      const { data } = await axios.get(\"/ecom-product-list\");\r\n      setProducts(data);\r\n    };\r\n\r\n    fetchproducts();\r\n  }, [currentProducts]);\r\n  const deleteP = (id) => [axios.delete(`/ecom-product-list/${id}`)];\r\n\r\n  const createProduct = () => axios.post(\"/ecom-product-list\");\r\n\r\n  let newProducts = products;\r\n  let p = \"12\";\r\n  let newProduct;\r\n  useAlan(products,setCurrentPage);\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{\r\n          pathname: \"/CreateProduct\",\r\n          state: { id: 1, name: \"sabaoon\", shirt: \"green\", products: products },\r\n        }}\r\n        onClick={() => {\r\n          createProduct().then((res) => {\r\n            newProduct = res.data;\r\n          });\r\n        }}\r\n      >\r\n        Create\r\n      </Link>\r\n\r\n      <Row>\r\n        {currentProducts.map((product, i) => {\r\n          return <Product product={product} key={i} deleteP={deleteP} />;\r\n        })}\r\n      </Row>\r\n      <Pagination\r\n        postperPage={postperPage}\r\n        totalPosts={products.length}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}