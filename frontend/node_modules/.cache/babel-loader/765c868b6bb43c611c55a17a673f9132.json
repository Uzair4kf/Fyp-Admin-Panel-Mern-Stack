{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport PostsReducer from \"./reducers/PostsReducer\";\nimport thunk from \"redux-thunk\";\nimport { AuthReducer } from \"./reducers/AuthReducer\";\nimport todoReducers from \"./reducers/Reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\nconst middleware = applyMiddleware(thunk);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducers = combineReducers({\n  posts: PostsReducer,\n  auth: AuthReducer,\n  todoReducers,\n  form: reduxFormReducer\n});\nconst reducer = combineReducers({});\nconst initialState = {};\nexport const store = createStore(reducer, initialState); // export const store = createStore(reducers, composeEnhancers(middleware));","map":{"version":3,"sources":["C:/Web/E commerce Templates/Dummy Admin Temp/package/frontend/src/store/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","PostsReducer","thunk","AuthReducer","todoReducers","composeWithDevTools","reducer","reduxFormReducer","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","posts","auth","form","initialState","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,OAAO,IAAIC,gBAApB,QAA4C,YAA5C;AACA,MAAMC,UAAU,GAAGX,eAAe,CAACK,KAAD,CAAlC;AAEA,MAAMO,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AAEA,MAAMa,QAAQ,GAAGd,eAAe,CAAC;AAC/Be,EAAAA,KAAK,EAAEZ,YADwB;AAE/Ba,EAAAA,IAAI,EAAEX,WAFyB;AAG/BC,EAAAA,YAH+B;AAI/BW,EAAAA,IAAI,EAAER;AAJyB,CAAD,CAAhC;AAOA,MAAMD,OAAO,GAAGR,eAAe,CAAC,EAAD,CAA/B;AACA,MAAMkB,YAAY,GAAG,EAArB;AACA,OAAO,MAAMC,KAAK,GAAGjB,WAAW,CAACM,OAAD,EAAUU,YAAV,CAAzB,C,CAEP","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport PostsReducer from \"./reducers/PostsReducer\";\nimport thunk from \"redux-thunk\";\nimport { AuthReducer } from \"./reducers/AuthReducer\";\nimport todoReducers from \"./reducers/Reducers\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n  posts: PostsReducer,\n  auth: AuthReducer,\n  todoReducers,\n  form: reduxFormReducer,\n});\n\nconst reducer = combineReducers({});\nconst initialState = {};\nexport const store = createStore(reducer, initialState);\n\n// export const store = createStore(reducers, composeEnhancers(middleware));\n"]},"metadata":{},"sourceType":"module"}