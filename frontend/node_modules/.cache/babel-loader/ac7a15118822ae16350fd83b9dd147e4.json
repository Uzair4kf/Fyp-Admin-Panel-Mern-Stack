{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limia\\\\Desktop\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\jsx\\\\layouts\\\\EventSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\"; /// Scrol\n\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventSidebar = ({\n  activeEvent\n}) => {\n  _s();\n\n  let a = new Date();\n  const newd = moment(a).format(\"MMM Do YY\");\n  console.log(newd);\n  const [date, setDate] = useState(new Date());\n  const [largeModal, setLargeModal] = useState(false);\n  const [eventName, setEventName] = useState();\n  const [eventdesc, setEventDesc] = useState();\n  const [hasEvent, setHasEvent] = useState(false);\n  const [calendarEvents, setCalendarEvents] = useState([]); // const fulldate = date.getDate().concat(date.getMonth() + 1);\n  // console.log(fulldate);\n\n  useEffect(() => {\n    const fetchcalendarEvents = async () => {\n      const {\n        data\n      } = await axios.get(\"/ecom-calendar\");\n      setCalendarEvents(data);\n    };\n\n    fetchcalendarEvents();\n  }, []);\n  const [cal, setCal] = useState();\n\n  const createCalendarEvent = async () => {\n    const res = await axios.post(`/ecom-calendar`, {\n      name: eventName,\n      description: eventdesc,\n      eventDate: date\n    });\n    console.log(res.status);\n  };\n\n  console.log(hasEvent);\n  return /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n    className: `event-sidebar dz-scroll ${activeEvent ? \"active\" : \"\"}`,\n    id: \"eventSidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card rounded-0 mb-0 h-auto bg-transparent shadow-none\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body event-calender pb-2 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          className: hasEvent && \"c1\",\n          onClickDay: date => {\n            setLargeModal(true);\n            setDate(date);\n            console.log(calendarEvents.map(event => {\n              return event.eventDate;\n            }));\n            console.log(cal);\n\n            if (cal) {\n              setEventName(cal.eventname);\n              setEventDesc(cal.description);\n            }\n          },\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade bd-example-modal-lg\",\n      show: largeModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Calendar Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"\",\n          className: \"btn-close\",\n          onClick: () => {\n            setLargeModal(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"basic-form\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control form-control-lg\",\n                    type: \"text\",\n                    placeholder: \"Event Name\",\n                    onChange: e => {\n                      setEventName(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"basic-form\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control form-control-lg\",\n                    type: \"text\",\n                    placeholder: \"Event description\",\n                    onChange: e => {\n                      setEventDesc(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"basic-form\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control form-control-lg\",\n                    type: \"text\",\n                    value: date.toString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger light\",\n          onClick: () => setLargeModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary light\",\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: createCalendarEvent,\n          children: \"Save Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), hasEvent && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-2\",\n          variant: \"warning light\",\n          children: \"Update Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventSidebar, \"bcfqxCQSBG2r8vqapehmTj0qGKc=\");\n\n_c = EventSidebar;\nexport default EventSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventSidebar\");","map":{"version":3,"sources":["C:/Users/limia/Desktop/Dummy Admin Temp/package/frontend/src/jsx/layouts/EventSidebar.js"],"names":["React","useState","useEffect","Row","Card","Col","Button","Modal","Container","PerfectScrollbar","Calendar","moment","axios","EventSidebar","activeEvent","a","Date","newd","format","console","log","date","setDate","largeModal","setLargeModal","eventName","setEventName","eventdesc","setEventDesc","hasEvent","setHasEvent","calendarEvents","setCalendarEvents","fetchcalendarEvents","data","get","cal","setCal","createCalendarEvent","res","post","name","description","eventDate","status","map","event","eventname","e","target","value","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n/// Scrol\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst EventSidebar = ({ activeEvent }) => {\r\n  let a = new Date();\r\n  const newd = moment(a).format(\"MMM Do YY\");\r\n\r\n  console.log(newd);\r\n  const [date, setDate] = useState(new Date());\r\n  const [largeModal, setLargeModal] = useState(false);\r\n  const [eventName, setEventName] = useState();\r\n  const [eventdesc, setEventDesc] = useState();\r\n  const [hasEvent, setHasEvent] = useState(false);\r\n  const [calendarEvents, setCalendarEvents] = useState([]);\r\n\r\n  // const fulldate = date.getDate().concat(date.getMonth() + 1);\r\n\r\n  // console.log(fulldate);\r\n  useEffect(() => {\r\n    const fetchcalendarEvents = async () => {\r\n      const { data } = await axios.get(\"/ecom-calendar\");\r\n\r\n      setCalendarEvents(data);\r\n    };\r\n    fetchcalendarEvents();\r\n  }, []);\r\n  const [cal, setCal] = useState();\r\n\r\n  const createCalendarEvent = async () => {\r\n    const res = await axios.post(`/ecom-calendar`, {\r\n      name: eventName,\r\n      description: eventdesc,\r\n      eventDate: date,\r\n    });\r\n\r\n    console.log(res.status);\r\n  };\r\n\r\n  console.log(hasEvent);\r\n  return (\r\n    <PerfectScrollbar\r\n      className={`event-sidebar dz-scroll ${activeEvent ? \"active\" : \"\"}`}\r\n      id=\"eventSidebar\"\r\n    >\r\n      <div className=\"card rounded-0 mb-0 h-auto bg-transparent shadow-none\">\r\n        <div className=\"card-body event-calender pb-2 text-center\">\r\n          <Calendar\r\n            className={hasEvent && \"c1\"}\r\n            onClickDay={(date) => {\r\n              setLargeModal(true);\r\n              setDate(date);\r\n\r\n              console.log(\r\n                calendarEvents.map((event) => {\r\n                  return event.eventDate;\r\n                })\r\n              );\r\n\r\n              console.log(cal);\r\n              if (cal) {\r\n                setEventName(cal.eventname);\r\n                setEventDesc(cal.description);\r\n              }\r\n            }}\r\n            value={date}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Modal className=\"fade bd-example-modal-lg\" show={largeModal} size=\"lg\">\r\n        <Modal.Header>\r\n          <Modal.Title>Calendar Event</Modal.Title>\r\n\r\n          <Button\r\n            variant=\"\"\r\n            className=\"btn-close\"\r\n            onClick={() => {\r\n              setLargeModal(false);\r\n            }}\r\n          ></Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Col xl=\"6\">\r\n            <div class=\"card-body\">\r\n              <div class=\"basic-form\">\r\n                <form>\r\n                  <div class=\"form-group mb-3\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Event Name\"\r\n                      onChange={(e) => {\r\n                        setEventName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xl=\"6\">\r\n            <div class=\"card-body\">\r\n              <div class=\"basic-form\">\r\n                <form>\r\n                  <div class=\"form-group mb-3\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Event description\"\r\n                      onChange={(e) => {\r\n                        setEventDesc(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xl=\"6\">\r\n            <div class=\"card-body\">\r\n              <div class=\"basic-form\">\r\n                <form>\r\n                  <div class=\"form-group mb-3\">\r\n                    <input\r\n                      class=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      value={date.toString()}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger light\" onClick={() => setLargeModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary light\"\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={createCalendarEvent}\r\n          >\r\n            Save Event\r\n          </Button>\r\n          {hasEvent && (\r\n            <Button className=\"me-2\" variant=\"warning light\">\r\n              Update Event\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default EventSidebar;\r\n"]},"metadata":{},"sourceType":"module"}