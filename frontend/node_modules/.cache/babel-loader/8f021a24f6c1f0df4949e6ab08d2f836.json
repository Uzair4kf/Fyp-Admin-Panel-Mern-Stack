{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\E commerce Templates\\\\Dummy Admin Temp\\\\package\\\\frontend\\\\src\\\\jsx\\\\pages\\\\ProductList.js\";\nimport React, { useState, useEffect, useRef, useCallback, useMemo, useContext, useLayoutEffect } from \"react\";\nimport { Row, Card, Col, Button, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport useAlan from \"../hooks/useAlan\";\nimport CreateProduct from \"./CreateProduct\";\nimport products from \"./products\";\nimport Product from \"./Product\";\nimport axios from \"axios\";\nimport Pagination from \"../components/bootstrap/Pagination\";\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport SearchContext from \"../../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  var _products;\n\n  const {\n    searchItem\n  } = useContext(SearchContext); //Initialization\n  // const [products, setProducts] = useState([]);\n\n  let products = [];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postperPage, setPostPerPage] = useState(10);\n  const [stat, setStat] = useState(products);\n  const array = useRef(products);\n  let p = [];\n  const [alanInstance, setAlanInstance] = useState();\n  const alanKey = `1924fbdbfa5f99b552c43824c5134e1c2e956eca572e1d8b807a3e2338fdd0dc/stage`;\n\n  const deleteP = id => [axios.delete(`/ecom-product-list/${id}`)];\n\n  const createProduct = () => axios.post(`/ecom-product-list}`);\n\n  const [i, seti] = useState(0);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const renders = useRef(0);\n  console.log(renders.current++);\n  const indexofLastPage = currentPage * postperPage;\n  const indexofFirstPage = indexofLastPage - postperPage;\n  const currentProducts = (_products = products) === null || _products === void 0 ? void 0 : _products.slice(indexofFirstPage, indexofLastPage);\n  useEffect(() => {\n    const fetchproducts = async () => {\n      const {\n        data\n      } = await axios.get(\"/ecom-product-list\");\n      products = data;\n    };\n\n    fetchproducts();\n  }, [products]); // useEffect(() => {\n  //   let filterProducts = products.filter((val) => {\n  //     if (searchItem == \"\") return val;\n  //     else if (val.name?.toLowerCase().includes(searchItem?.toLowerCase())) {\n  //       return val;\n  //     }\n  //   });\n  //   setProducts(filterProducts);\n  // }, [searchItem]);\n\n  console.log(products); // const sort = () => {\n  //   let a = products?.sort((a, b) => {\n  //     return b.price - a.price;\n  //   });\n  //   setProducts(a);\n  // };\n  //hooks\n  // useEffect(() => {\n  //   if (alanInstance != null) return;\n  //   setAlanInstance(\n  //     alanBtn({\n  //       top: \"15px\",\n  //       left: \"15px\",\n  //       key: alanKey,\n  //       onCommand: ({ command }) => {\n  //         if ((command = \"product\")) {\n  //           window.location.href =\n  //             \"http://localhost:3000/react/demo/ecom-product-list\";\n  //         }\n  //         if ((command = \"price\")) {\n  //         }\n  //       },\n  //     })\n  //   );\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: `/CreateProduct`,\n        state: {\n          id: 1,\n          name: \"sabaoon\",\n          shirt: \"green\",\n          products: products\n        }\n      },\n      onClick: () => {\n        createProduct().then(res => {\n          console.log(res.data);\n        });\n      },\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [console.log(currentProducts), currentProducts.map((product, i) => {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          deleteP: deleteP,\n          seti: seti\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postperPage: postperPage,\n      totalPosts: products.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Web/E commerce Templates/Dummy Admin Temp/package/frontend/src/jsx/pages/ProductList.js"],"names":["React","useState","useEffect","useRef","useCallback","useMemo","useContext","useLayoutEffect","Row","Card","Col","Button","Nav","Link","useAlan","CreateProduct","products","Product","axios","Pagination","alanBtn","SearchContext","searchItem","currentPage","setCurrentPage","postperPage","setPostPerPage","stat","setStat","array","p","alanInstance","setAlanInstance","alanKey","deleteP","id","delete","createProduct","post","i","seti","paginate","pageNumber","renders","console","log","current","indexofLastPage","indexofFirstPage","currentProducts","slice","fetchproducts","data","get","pathname","state","name","shirt","then","res","map","product","length"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n  useContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { Row, Card, Col, Button, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAlan from \"../hooks/useAlan\";\r\nimport CreateProduct from \"./CreateProduct\";\r\nimport products from \"./products\";\r\nimport Product from \"./Product\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"../components/bootstrap/Pagination\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\nimport SearchContext from \"../../context/SearchContext\";\r\nexport default function () {\r\n  const { searchItem } = useContext(SearchContext);\r\n\r\n  \r\n\r\n  //Initialization\r\n\r\n  // const [products, setProducts] = useState([]);\r\n  let products = [];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postperPage, setPostPerPage] = useState(10);\r\n  const [stat, setStat] = useState(products);\r\n  const array = useRef(products);\r\n \r\n\r\n  let p = [];\r\n  const [alanInstance, setAlanInstance] = useState();\r\n  const alanKey = `1924fbdbfa5f99b552c43824c5134e1c2e956eca572e1d8b807a3e2338fdd0dc/stage`;\r\n\r\n  const deleteP = (id) => [axios.delete(`/ecom-product-list/${id}`)];\r\n  const createProduct = () => axios.post(`/ecom-product-list}`);\r\n  const [i, seti] = useState(0);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const renders = useRef(0);\r\n  console.log(renders.current++);\r\n\r\n  const indexofLastPage = currentPage * postperPage;\r\n  const indexofFirstPage = indexofLastPage - postperPage;\r\n  const currentProducts = products?.slice(indexofFirstPage, indexofLastPage);\r\n  useEffect(() => {\r\n    const fetchproducts = async () => {\r\n      const { data } = await axios.get(\"/ecom-product-list\");\r\n      products = data;\r\n    };\r\n    fetchproducts();\r\n  }, [products]);\r\n   \r\n\r\n  // useEffect(() => {\r\n  //   let filterProducts = products.filter((val) => {\r\n  //     if (searchItem == \"\") return val;\r\n  //     else if (val.name?.toLowerCase().includes(searchItem?.toLowerCase())) {\r\n  //       return val;\r\n  //     }\r\n  //   });\r\n  //   setProducts(filterProducts);\r\n  // }, [searchItem]);\r\n\r\n  console.log(products);\r\n\r\n  // const sort = () => {\r\n  //   let a = products?.sort((a, b) => {\r\n  //     return b.price - a.price;\r\n  //   });\r\n\r\n  //   setProducts(a);\r\n  // };\r\n\r\n  //hooks\r\n\r\n  // useEffect(() => {\r\n  //   if (alanInstance != null) return;\r\n  //   setAlanInstance(\r\n  //     alanBtn({\r\n  //       top: \"15px\",\r\n  //       left: \"15px\",\r\n  //       key: alanKey,\r\n  //       onCommand: ({ command }) => {\r\n  //         if ((command = \"product\")) {\r\n  //           window.location.href =\r\n  //             \"http://localhost:3000/react/demo/ecom-product-list\";\r\n  //         }\r\n  //         if ((command = \"price\")) {\r\n\r\n  //         }\r\n  //       },\r\n  //     })\r\n  //   );\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{\r\n          pathname: `/CreateProduct`,\r\n          state: {\r\n            id: 1,\r\n            name: \"sabaoon\",\r\n            shirt: \"green\",\r\n            products: products,\r\n          },\r\n        }}\r\n        onClick={() => {\r\n          createProduct().then((res) => {\r\n            console.log(res.data);\r\n          });\r\n        }}\r\n      >\r\n        Create\r\n      </Link>\r\n      <Button>Sort</Button>\r\n      <Row>\r\n        {console.log(currentProducts)}\r\n        {currentProducts.map((product, i) => {\r\n          return (\r\n            <Product product={product} key={i} deleteP={deleteP} seti={seti} />\r\n          );\r\n        })}\r\n      </Row>\r\n\r\n      <Pagination\r\n        postperPage={postperPage}\r\n        totalPosts={products.length}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}